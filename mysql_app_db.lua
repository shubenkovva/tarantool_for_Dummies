---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by user.
--- DateTime: 2019-04-30 14:31
---

local M = {}

M.start = function(self)
    box.once("bootstrap.0.1", function()

        if box.space.catalogs then
            box.space.catalogs:drop()
        end

        s = box.schema.space.create('catalogs')

        s:format({
            {name = 'id', type = 'unsigned'},
            {name = 'name', type = 'string'}
        })

        if box.sequence.S then
            box.sequence.S:drop()
        end

        box.schema.sequence.create('S',{min=1, start=1})

        s:create_index('primary', {type = 'hash', parts = {'id'}})
        s:create_index('sec_name', {type = 'tree', unique = false, parts = {'name'}})

        box.schema.user.grant('guest','read,write,execute', 'universe')
        log.info('bootstrap.0.1')
    end)
end

function insert_catalogs(obj_catalogs)
    local name = obj_catalogs
        log.info(obj_catalogs)
        box.space.catalogs:insert{box.sequence.S:next(), name}
        log.info('Success add new data table catalogs')
    return 'Success add new data table catalogs'
end

function select_catalogs()
        local temp = box.space.catalogs:select{}
        log.info('Success select data table catalogs')
    return temp
end

function fix_nil_to_empty_catalogs()
    local temp = box.space.catalogs:select{}
    for key, value in ipairs(temp) do
        if value[2] == '' then
            box.space.catalogs:update({key}, {{'=', 2, 'Empty'}})
            log.info('Success update data table catalogs')
        end
    end

end


function save_date_weather(obj_weather)

    local id_city = obj_weather['id']
    local name    = obj_weather['name']
    local tempr   = obj_weather['tempr']
    local dt      = obj_weather['dt']
    local date    = obj_weather['date']

    if check_city_record(id_city, date) then
        box.space.sp_weather:insert{box.sequence.S:next(), id_city, name, tempr, dt, date}
        log.info('Success add new data save_date_weather')
        return 'Success add new data save_date_weather'
    else
        local a = box.space.sp_weather.index.sec_id_city_date:select{id_city, date}

        for key,value in pairs(a) do
            box.space.sp_weather:delete(a[key][1])
        end

        box.space.sp_weather:insert{box.sequence.S:next(), id_city, name, tempr, dt, date}
        log.info('save_date_weather - date for exist record updated')
        return 'save_date_weather - date for exist record updated'
    end
end

function check_city_record(id_city, date)
    local temp = box.space.sp_weather.index.sec_id_city_date:select{id_city, date}
    if #temp == 0 then
        return true
    else
        return false
    end
end

return M
